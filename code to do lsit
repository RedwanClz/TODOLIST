from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi

# Replace the placeholder with your Atlas connection string
uri = "mongodb+srv://redwancalzada:Ynov1996!@cluster0.edpbu8s.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"

# Set the Stable API version when creating a new client
client = MongoClient(uri, server_api=ServerApi('1'))
                          
# Send a ping to confirm a successful connection
try:
    client.admin.command('ping')
    print("Pinged your deployment. You successfully connected to MongoDB!")
except Exception as e:
    print(e)

from pandas import DataFrame

# Get the database using the method we defined in pymongo_test_insert file
from pymongo_get_database import get_database
dbname = get_database()

collection_name = dbname["Bakitesmort"]



todo = {}
tache_id = 0

def _afficher(todo):
    item_details = collection_name.find()
    for item in item_details:
    # convert the dictionary objects to dataframe
        items_df = DataFrame(item_details)

        # see the magic
        print(items_df)
        #print(todo)

def add_elm(x, y):
     
    from pymongo_get_database import get_database
    dbname = get_database()
    collection_name = dbname["Bakitesmort"]


    from dateutil import parser
    collection_name.insert_one(todo)
    global tache_id
    #global todo
    tache_id += 1
    todo[tache_id] = {
            "tache id": tache_id,
            "title": x,
            "content": y,
            "done": False
        }
    return tache_id

# def dlt_elm(x):
#         del todo[x]

add_elm("oui","non")



#Bakitesmort.delete_one(myQuery)       
    


# tache1 = add_elm("oui", "non")
# tache2 = add_elm("blabla", "blibli")


# dlt_elm(tache2)

#print(todo)
_afficher(todo)
